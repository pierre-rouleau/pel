#!/bin/sh
#  FUNDAMENTAL FILE: etags-lisp
#
#  Purpose   : Build Emacs Tags file for Lisp source code files.
#  Created   : Tuesday, November 10 2020.
#  Author    : Pierre Rouleau <prouleau001@gmail.com>
#  Time-stamp: <2024-06-05 16:51:59 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
#  Module Description
#  ------------------
#
# Build an Emacs Tags file for all Common Lisp source code files in the
# sub-directory tree(s) specified in the command line.
# This includes the files with the following file extensions:
# .cl, .clisp, .l, .lisp, .LSP, .lsp and .ml.
#
# Usage:
#  - cd where you want to store the TAGS file
#  - etags-lisp DIRPATH [DIRPATH ...]
#

# ----------------------------------------------------------------------------
#  Dependencies
#  ------------

# - Uses fd (also named fdfind in some Linux distros like Mint) if it is
#   available.  See URL:  https://github.com/sharkdp/fd .
# - if fd/fdfind is not available, use find instead.
#
# Using fd/fdfind is preferred because it supports ignoring files identified
# by .gitignore, .ignore, .fdignore files. The fd utility can also execute
# faster than find in several scenarios.
#
# - To force use of find, set the ETAGS_USE_FIND environment variable to 1.

# TODO: eliminate code duplication while keeping capability to stay
#       compatible with various shells (sh, bash, etc...)

# ----------------------------------------------------------------------------
#  Code
#  ----


print_usage()
{
    printf -- "
etags-lisp: build an etags-compliant TAGS in the current directory
            for all Lisp and C source code files in the specified
            directory trees(s).

  Usage: etags-lisp [-h|--help]

   • Print this help information.

  Usage: etags-lisp DIRPATH [DIRPATH ...]

   • [Re]build an etags-compliant TAGS file in current directory
     for the Common Lisp files in the directory tree(s) identified
     on the command line.
   • Overwrites any TAGS file in the current directory.
   • Inspects content of .cl, .clisp, .l, .lisp, .LSP, .lsp and .ml
     and their gz compressed files.
   • Stores the names of inspected files in the file named
    .etags-lisp-files.txt stored in the same directory as TAGS.
   • Uses etags to build the TAGS file by default.
     ETAGS_USE_UCTAGS is ignored because Ctags does not handle .gz files.
   • Uses fast 'fdfind' or 'fd' if available, 'find' otherwise.
     - The 'fd' utility is from: https://github.com/sharkdp/fd
     - In some Linux distros, 'fd' is renamed 'fdfind'.
   • To force the use of 'find', set ETAGS_USE_FIND environment
     variable to 1.
   • ☝️  When 'fdfind' or 'fd' is used, the content of files identified
     by the .gitignore, .ignore or .fdignore files are ignored.
   • Prints the path of the find program used and when
     repository ignore files are scanned.
"
    if [ "$ETAGS_USE_FIND" = "1" ]; then
        printf -- "
⚠️   ETAGS_USE_FIND is set to 1, forcing the use of 'find'!
    • To prevent this, set it to 0 or remove that
      environment variable.
    • With USRHOME, you can use setenv and clrenv.
      See: https://github.com/pierre-rouleau/usrhome
"
    fi
}

# --

run__etags_lisp()
{
    # Expects no argument, but expects a list of files to parse on stdin.

    etags -
    if [ "$ETAGS_USE_UCTAGS" = "1" ]; then
        printf -- "-> Using etags despite ETAGS_USE_CTAGS since ctags can't handle compressed file\n"
    fi
    file_count="$(wc -l .etags-lisp-files.txt | awk '{print $1}')"
    printf "%s files found and processed. List stored in: .etags-lisp-files.txt\n" "${file_count}"
    unset file_count
}

# --
# Check validity of arguments

if [ -z "$1" ]; then
    print_usage
    exit 1
elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    print_usage
    if [ "$#" = "1" ]; then
        exit 0
    else
        exit  1
    fi
fi

# --
# Check the validity of directory names specified as arguments.
# Ensure that each directory specified on the command line
# exists.  Also ensure that a directory name is not specified more
# than once.  Use the realpath of that directory name when comparing.

dpaths=
for dname in "$@"; do
    if [ ! -d "${dname}" ]; then
        printf -- "Specified directory does not exists: %s\n" "${dname}"
        exit 2
    fi
    dpath="$(realpath "${dname}")"
    for dp in ${dpaths}; do
        if [ "$dp" = "$dpath" ]; then
            printf -- "Multiple entry of directory: %s\n" "${dname}"
            exit 3
        fi
        # check if new entry is a sub-directory of an exiting entry
        case "${dpath}" in
            "${dp}"*)
                printf -- "%s is a sub-dir of already specified %s\n" "${dname}" "${dp}"
                exit 3
                ;;
        esac
        # check if new entry is a parent directory of an existing entry
        case "${dp}" in
            "${dpath}"*)
                printf -- "%s is a parent dir of already specified %s\n" "${dname}" "${dp}"
                exit 3
                ;;
        esac

    done
    dpaths="${dpaths} ${dpath}"
done

# --

# Find the files, pass their names to etags which creates the TAGS file.
# To find the files, try to use fd or fdfind if they exist,
# otherwise use find.  Echo the actual program used to find files.
if [ "$ETAGS_USE_FIND" = "1" ]; then
    echo "- ETAGS_USE_FIND forces the use of find!"
    echo "-> Using" "$(which find)"
    find -f "$@" \( -name "*.cl"    -or -name "*.cl.gz" \
         -or -name "*.clisp" -or -name "*.clisp.gz" \
         -or -name "*.l"     -or -name "*.l.gz"    \
         -or -name "*.lisp"  -or -name "*.lisp.gz" \
         -or -name "*.LSP"   -or -name "*.LSP.gz" \
         -or -name "*.lsp"   -or -name "*.lsp.gz" \
         -or -name "*.ml"    -or -name "*.ml.gz" \
         \)  -print | tee .etags-lisp-files.txt | run__etags_lisp
else
    if [ -x "$(command -v fdfind)" ]; then
        echo "-> Using" "$(which fdfind)"
        echo "-> ☝️ Ignoring files identified in .gitignore, .ignore or .fdignore"
        fdfind --type f \
               -e .cl    -e .cl.gz \
               -e .clisp -e .clisp.gz \
               -e .l     -e .l.gz \
               -e .lisp  -e .lisp.gz \
               -e .LSP   -e .LSP.gz \
               -e .lsp   -e .lsp.gz \
               -e .ml    -e .ml.gz \
               . "$@" | tee .etags-lisp-files.txt | run__etags_lisp
    elif [ -x "$(command -v fd)" ]; then
        echo "-> Using" "$(which fd)"
        echo "-> ☝️ Ignoring files identified in .gitignore, .ignore or .fdignore"
        fd --type f \
           -e .cl    -e .cl.gz \
           -e .clisp -e .clisp.gz \
           -e .l     -e .l.gz \
           -e .lisp  -e .lisp.gz \
           -e .LSP   -e .LSP.gz \
           -e .lsp   -e .lsp.gz \
           -e .ml    -e .ml.gz \
           . "$@" | tee .etags-lisp-files.txt | run__etags_lisp
    else
        echo "-> Using" "$(which find)"
        find -f "$@" \(   -name "*.cl"    -or -name "*.cl.gz" \
             -or -name "*.clisp" -or -name "*.clisp.gz" \
             -or -name "*.l"     -or -name "*.l.gz"    \
             -or -name "*.lisp"  -or -name "*.lisp.gz" \
             -or -name "*.LSP"   -or -name "*.LSP.gz" \
             -or -name "*.lsp"   -or -name "*.lsp.gz" \
             -or -name "*.ml"    -or -name "*.ml.gz" \
             \)  -print | tee .etags-lisp-files.txt | run__etags_lisp
    fi
fi

# -----------------------------------------------------------------------------
# Local Variables:
# sh-shell: sh
# End:
