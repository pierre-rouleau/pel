#!/bin/sh
# SH FILE: ge
#
# Purpose   : Launch an independent, detached, GUI Emacs process.  Supports macOS and Linux.
# Created   : Tuesday, August  3 2021.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-06-02 13:22:02 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Description
# -----------
#
# Launch an independent GUI Emacs that is detached from the terminal shell
# executing the command.  The current directory of the GUI Emacs process is
# set to the current directory of the terminal shell from which the 'ge'
# command was issued.

#
# ----------------------------------------------------------------------------
# Code
# ----
#
print_usage()
{
    printf -- "\
ge : Open an independent, detached, graphical-mode instance of Emacs.

 Usage: ge [-h|--help]
        ge [FILE..]

 Note: All command line arguments are passed to the Emacs application
       unchanged.  See Emacs man page for more options.

       Emacs is launched inside an independent OS window, but
       that process inherit the current directory.
       Control is returned right away to the terminal shell.
"
}


if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    print_usage
    exit 0
fi


# Pass to emacs:
#   - --chdir to the current working directory so we open the same files
#     as what is specified on the command line. If we don't do that the GUI
#     based Emacs might use a different directory (most often the home directory)
#     and if you specify files that are not in that directory they
#     will not be opened, another file file open which will most likely be
#     in an empty buffer (if the file does not exists in the home directory).
#
# Emacs 27+ support for PEL:
#    - To allow Emacs early-init.el code to distinguish whether Emacs is
#      running in terminal mode or in graphics mode.  When running
#      early-init.el Emacs does not know and the function
#      display-graphic-p does not work at that moment.  The only way I
#      have found is to use an environment variable.  So the following
#      code sets one up: PEL_EMACS_IN_GRAPHICS
# See: https://emacs.stackexchange.com/questions/66268/how-to-set-package-user-dir-with-emacs-27-with-package-quickstart-and-distinguis
#

case $(uname) in
    Darwin)
        if [ -d /Applications/Emacs.app/Contents ]; then
            # Under macOS use the open application to launch the GUI Emacs application.
            # -n : open a new instance on each invocation
            # -a application: identify the path of the application
            # --env : allows passing environment variable definitions to the launched application
            #
            # The macOS GUI build packs multiple binaries.
            # The umbrella/dispatcher binary is:  /Applications/Emacs.app/Contents/MacOS/Emacs
            # There are other architecture specific binaries.
            # Invoke them if they can be identified.  The value of the arch variable is not set,
            # so the `arch' command must be used.
            case "$(arch)" in
                arm64)
                    # Running on Apple Silicon: use the arm64 specific binary if present
                    if [ -x /Applications/Emacs.app/Contents/MacOS/Emacs-arm64-11 ]; then
                        open -n -a /Applications/Emacs.app/Contents/MacOS/Emacs-arm64-11 --env PEL_EMACS_IN_GRAPHICS=1 --args --chdir="$(pwd)" "$@"
                    else
                        # since it's likely an older macOS system where open did not have the --env option, don't use it.
                        export PEL_EMACS_IN_GRAPHICS=1
                        open -n -a /Applications/Emacs.app/Contents/MacOS/Emacs --args --chdir="$(pwd)" "$@"
                    fi
                    ;;
                *)
                    # Use the general dispatcher for all others
                    # It will check what version of macOS and use the appropriate one.
                    # since it's likely an older macOS system where open did not have the --env option, don't use it.
                    export PEL_EMACS_IN_GRAPHICS=1
                    open -n -a /Applications/Emacs.app/Contents/MacOS/Emacs --args --chdir="$(pwd)" "$@"
                    ;;
            esac
        else
            echo "*** ge: ERROR ***"
            echo "The required /Applications/Emacs.app is missing."
            echo "Please install Emacs from https://emacsformacosx.com/ "
            echo "*****************"
            exit 1
        fi
        ;;

    Linux)
        # Under Linux, invoke emacs passing the current working directory
        # setting the PEL_EMACS_IN_GRAPHICS environment variable to inform
        # PEL about the graphics mode and ensure it runs detached.
        export PEL_EMACS_IN_GRAPHICS=1
        emacs --chdir="$(pwd)" "$@" &
        ;;

    *)
        echo "Sorry, the $(uname) Operating System is not supported yet."
        echo "Please create a bug report in the PEL project to request it."
        exit 1
        ;;
esac

# ----------------------------------------------------------------------------
