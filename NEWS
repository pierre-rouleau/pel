PEL Library NEWS         -*- org -*-

This file uses Org mode. Some useful (default) key-bindings:
 - Use "C-c C-n"/"C-c C-p" to jump to next/prev heading
 - Use "<tab>" to expand/collapse nodes
 - Use "<backtab>" to cycle visibility of all nodes
 - Use "C-c C-o" to open links

* Version: 0.1.1
- new features:
  - rst support: added commands for text emphasis (bold, italic, literal, interpreted).
  - modified keymap: draw is now ``<f11> D``.
  - added support and documentation for diff/ediff (with keymaps ``<f11> d`` and ``<f11> e``.
  - Added support for Magit and Monky and ``<f11> v`` keymap for (D)VCS.
  - Added ``pel-end-of-line`` which helps move before trailing spaces.
  - Documentation: documented autoave & backup
  - Documentation: described limitations in the dual-stage autoloading.
- fixes:
  - navigation: fixed autoloading
* First Version: 0.1.0
- This is the very first version of PEL, the Pragmatic Environment Library.

  - As described in [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#overview][PEL manual overview]] PEL is a hybrid package.
    It is:
    - a [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#pdf-document-tables][collection of PDF]] files that document Emacs key bindings that covers
      standard Emacs key-bindings but also the key bindings provided by PEL and
      the external packages PEL uses.
    - an Emacs key binding documentation project
      (see [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#pel-key-bindings][Key Bindings Documentation]]),
    - a collection of [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#id26][PEL convenience features]]  which:

      - are implemented in several mostly independent files,
      - have key bindings mostly using the function keys to provide
        key map trees that do not interfere with standard Emacs key bindings,
      - provide access to several other external Emacs packages (see [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#credits][Credits]])
        but via [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#pel-customization][PEL Customization]] to selectively configure, enable and activate
        these features.
        - This conforms to the [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#pel-customization][Emacs easy customization]] system and reduces your
          need to write custom Emacs Lisp configuration code.
  - PEL is distributed via the [[https://github.com/pierre-rouleau/pel][PEL Github repository]] and provides a Makefile to
    automate the compilation and a large part of the installation of PEL and its
    dependencies.
  - PEL is not yet distributed via sites like MELPA but
    [[https://github.com/pierre-rouleau/pel/blob/master/doc/pel-manual.rst#how-to-install-pel][PEL's installation instructions]] should alleviate this problem.
* Version 0.2.0
- Lots of updates since version 0.1.0, too many to describe here.
  PEL is still in what I consider an early development phase.
  Although most base features are stable, there's still several rough edges,
  lots of packages and programming languages I want to support are not
  properly supported.

  - I changed the instructions for installations on a new computer.
  - Added lots of cross-reference links between the PDF sheets.
  - Implemented a tempo skeleton generic file header block generation, and
    specialized ones for C, Erlang and reStructuredText files.
  - Support for Erlang and C is mostly complete, but there are several packages
    not supported yet.
  - Added support for sessions, projectile, hiding comments, hiding docstrings.
  - Added ability to automatically download and install packages from some
    non-Elpa compliant web sites (but path of Github) like EmacsAttic and
    EmacsMirror.
  - Support for generation of images using PlantUML and Graphviz Dot directly
    from within Emacs.
  - Support for several ways to deals with keys: Hydras, key-chord and key-seq,
    avy and ace-link.
  - Support for voice dictation under macOS and AppleScript.
  - Support for auto-completion using either auto-complete or company.
  - Support for input completion with Help, Ivy, Ivy/Counsel as well as Ido.
  - Support for bookmark management with bm.
  - Support for virtual-regexp
  - Key bindings to quickly access the customization buffer of several
    customization groups.
  - and more...
* Additions since 0.2.0
- *Fixes*:
  - Fixed distributed custom skeleton code for C.  Updated the example description.
  - *Window flipping commands*: The keys to flip windows horizontally (<f11> w
    h) and vertically (<f11> w v) are now safer.  They now take into account the
    minibuffer and dedicated windows and only operate on the current frame.
  - pel-find-file-at-point properly handle relative file names.
  - popup-kill-ring binding is now <f11> M-y to prevent a clash with PEL's
    yasnippet key prefix (<f11> y).
  - Added missing key-seq loading.
  - Added missing key-chord installation.
  - pel-initial-completion-mode can now be edited properly.  The default value
    is now valid.
  - User Manual fixes:
    - User manual installation now properly references the "/.emacs.d" directory.
      and no longer references the "/.emacs.p" directory.
- *New Features and improvements*:
  - The keys to flip windows horizontally (<f11> w h) and vertically (<f11> w v)
    are now safer.  They now take into account the minibuffer and dedicated
    windows and only operate on the current frame.
  - Added support for all-the-icons.
    - In text mode it provides arrows for the NeoTree window.
    - In Graphics mode, provides icons for NeoTree, dired, ibuffer and ivy when
      their respective pel-use- user options are activated.
  - Added support for lispy, a modal editing mode for Lisp-like programming languages.
  - Added support for lpy, a lispy mode for Python.
  - Added support for AsciiDoc via the adoc-mode.
  - Added support for external packages that extend Emacs keyboard macro
    support: centimacro, elmacro and emacros.  Both centimacro and emacros
    libraries supported by PEL are forked of the original libraries with bug
    fixes and improvements.
  - The prefix set member key to quickly access customization buffer groups is
    now <f2> instead of <f1>. The prefix set member key <f1> is now used to open
    the local copy of the PDF that describes the topic(s) that manipulate the
    commands executed by the keys under the same key prefix.   This feature,
    along with all hyperlinks allow a user to quickly navigate through the PEL
    documentation inside the PEL manual hosted on Github, the local PDF files
    and the PDF files hosted on Github.
  - Window navigation key sequences: Added key bindings to navigation across
    windows: The <Esc> key followed by the cursor pointing in the direction of
    the window are now bound to the corresponding wind move command. In graphics
    mode,  the <Esc> key followed by a Shift cursor key pointing in the
    direction of the other frame move point to that frame using the
    corresponding fm command.  This works everywhere except in Org-Mode where
    the <f11> based key sequences can be used instead.  The Esc based movements
    are useful in the active vterm window.
  - The M-RET key can be used to align text vertically in some modes.
  - pel-kbmacro-prompts user option is now off by default to mimic Emacs.
  - Regrouped the PEL customization groups.
  - PEL Hydras are no longer terminated by typing ‘q’.   Use <f7> to terminate
    them.  The ‘q’ key is used to execute the quit-window command.  Use it to
    change the buffer seen in the current window. The loading of PEL Hydras is
    no longer deferred: it’s loaded on demand.
  - More keys in the window Hydra, pel-∑wnd: q to quit window, b and B to change
    buffer in current window. Also changed the key to kill current buffer: it’s
    k instead of K.
  - The new binding to bm-toggle (<f1> ‘ ‘) is easier to type than the old one
    (<f11> ‘ t)
  - More consistent key binding for the PEL customization of key-chords: now use;  <f11> <f2> P M-K
  - Cleanup PEL customization group hierarchy. Modified key bindings to access
    customization groups to make it easier to remember.
  - New PEL user option for spell checker control: pel-spell-check-tool.  This
    replaces the old one that was used to define the spell checker program for
    several OS.  The new one is simpler to use.
  - The commands that provide access to the local copy of the reference PDF
    files can also open the Github-hosted PDF file in the system browser.
  - Re-organized the key sequences to provide access to the reference PDF, the
    PEL customization and the Emacs customization buffer for topics accessible
    via a key sequence inside a PEL key-map:
    - The key sequences start with the prefix for the PEL key map and end with
      <f1> for help, <f2> for PEL customization buffer, <f3> for Emacs
      customization buffer.
    - The <f11> <f2> provides access to the commands to access customization
      search:  (c), to the customization buffer option (o) and to a
      customization group (g).
    - The <f11> <f2> E provides access to some Emacs customization groups.
    - The <f11> <f2> P provides access to some of the PEL customization groups
      that are not accessible from a specific PEL key map.
    - The <f11> <f2> SPACE provide access to the programming specific groups
      that do not have a specific key map: this includes lisp for the moment.
    - The <f11> ? p key sequence provide access to all reference PDF files
      (either the local copy or the GitHub-hosted web page) and support tab completion.
  - Added key binding to the customize browsers which allow you to navigate the customize data tree:
    - <f11> <f2> B browse the customize tree from the top.
    - <f11> <2> P B browse the customize tree from the top of the PEL
      customize tree.
  - Added a new PEL key map tree for browsing
    - <f11> B N : for NeoTree.  Removed the previous <f11> N  key sequence.
    - <f11> B Z : for ZTree.  Removed the previous <f11> Z key sequence.
    - <f11> B T: for early support of treemacs.  Its support is not complete yet.
  - Fixed typos in the manual installation instructions: “./emacs.d” is now “/.emacs.d”
  - Visible bookmarks no longer deferred loaded: loaded on demand: first time a bound-key is typed.
  - In graphic mode, the extra keys for windmove are loaded after 1 second instead of 5.
  - Temporarily set max-specpdl-size to 2000 while running benchmark-init commands to handle large set of packages.
  - The repository now provides examples of Emacs init.el files starting with
    the simplest one used to perform the first compilation to something that
    provides more features.
  - The repository now provides example of Bash alias commands to use a quick
    keys to launch emacs (see the "example/bin" directory).
  - Replaced the "fg" key-chord with a "gf" key-seq.  This is much less likely
    to cause unwanted movements.
- *User Manual changes and additions*:
  - The installation sections attempt to highlight the commands to execute.
  - A copy of the original init.el is provided in the new example/init
    section of the repository.
  - Recommends the use of pel-browse-pel to open the customize tree browser
    buffer to customize PEL the first time it is used.
  - A new section describes the Emacs user options that new users may want
    to set.
  - Added a fast-track section to the installation section, easier to follow
    than the complete sections with all the descriptions.
- *Reference PDF updates*:
  - Added hyperlinks in all PDF files.  The See also and title icons are now all links.
  - The help and customize PDFs have a lot of links to the of them PDF pages.
  - Reduced the empty white space in several tables.
  - Added the ➢PEL page that lists all PEL key maps.
  - Added a 𝕻𝔩Ɱ- Lispy PDF with links to lispy quick sheet sections.
  - Added Ɱ AsciiDoc page.
  - The ⅀ Align page describe how to use M-RET to align text vertically
  - Updated the ⅀Customize PDF and ⅀Help PDF wit hall changes in customization
    and access to the reference PDF files.
  - Improved the ⅀Windows PDF with several new links and complete description of ace-window.
  - Completed the ⅀Projectile PDF.
  - Updated  ⅀Input-Completion PDF
  - Identified Esc C- and C-[ C- key sequence alternatives for the for C-M-
    bindings in several locations in the PDFs (but not all yet).
  - Fixed errors and cleaned up several PDFs
- *Code Changes*:
  - pel-autoload.el now uses a pel-autoload macro to provide a more regular,
    cleaner syntax code easier to maintain and possibly for future automatic
    code generation.
