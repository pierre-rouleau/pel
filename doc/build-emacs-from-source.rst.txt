=======================
Build Emacs from Source
=======================

:Home URL: https://github.com/pierre-rouleau/pel
:Project: `PEL -- Pragmatic Emacs Library`_
:Created:  Tuesday, March  4 2025.
:Author:  Pierre Rouleau <prouleau001@gmail.com>
:Modified: 2025-08-30 10:43:22 EDT, updated by Pierre Rouleau.
:Copyright: Â© 2025, Pierre Rouleau

.. contents::  **Table of Contents**
.. sectnum::

.. ---------------------------------------------------------------------------


General Overview
================

:Ref: `What's new in Emacs 30.1?`_, by Mickey Petersen
:Ref: `Speed up Emacs with libjansson and native elisp compilation`_, by Mickey Petersen
:Ref: `How to Get Started with Tree-Sitter`_, by Mickey Petersen

This document describes how to build Emacs 30 on various platforms with
several useful features.  The build is done inside a specific directory,
located inside ``~/my/cdpub/emacs-repos``.

Step 1: Create a Git clone or Emacs repository
----------------------------------------------

::

  mkdir -p ~/my/dvpub/emacs-repos
  cd       ~/my/dvpub/emacs-repos
  git clone https://git.savannah.gnu.org/git/emacs.git

If you already had a copy of the repository, get the latest changes with::

  git pull


Step 2: Select the Git branch
-----------------------------

List the available tags and versions from the repository.

- To list the Git branches corresponding to recent Emacs development streams
  (like ``emacs-30`` for Emacs 30), you can use::

     git branch -r | sed -e s:origin/:: |  awk '{$1=$1; print}' | grep "^emacs"

- To list all Git tags::

    git tag


Select a tag or branch to check out.

Unless you have specific reasons to use a branch and want to use the very
latest code available, you probably want to build an existing release that has
gone through more testing.

- The tagged version correspond to the code at a specific moment, like a specific release.
  Something like ``emacs-30.1``.
- The branch may still be active and may correspond to the code as it evolves.
  For example, ``emacs-30`` is the branch for Emacs 30 development.
  After the release of Emacs 30.1,commits for the next Emacs 30 release are placed there.

============================== ===================================
Git Branch Name                Description
============================== ===================================
master                         Main.
emacs-30                       Branch. Evolution of Emacs 30.  Not stable.
emacs-30.1                     Tagged version.  Code that corresponds to release 30.1.
============================== ===================================

Step 3: Install Required Packages and Tools
-------------------------------------------

============================== =========================================
Name                           Description
============================== =========================================
makeinfo
Build Essentials               Build Essential tools;  ``sudo yum groupinstall "Development Tools"``
texinfo                        Texinfo package: ``dnf search texinfo``
gnutls                         GnuTLS support:  ``dnf search gnutls``
autoconf                       autoconf utility: ``dnf search autoconf``
libgccjit                      Required to enable Emacs native compiler
libjpeg-turbo-devel
libpng-devel
libtiff
============================== =========================================


macOS Packages
~~~~~~~~~~~~~~

On macOS, several required packages can be installed with `Homebrew`_.
Use the following commands to install them. The last column shows the command
that prints the name of the directory holding the files. It works for both
Intel and Apple Silicon macOS and you may need those in the configure command
if it does not find the library (see the build instructions below).

============ ===================================== ==========================
Package      Installation command                  Installed directory
============ ===================================== ==========================
libgccjit    ``brew install libgccjit``            ``brew --prefix libgccjit``
libtiff      ``brew install libtiff``              ``brew --prefix libtiff``
libpng       ``brew install libpng``               ``brew --prefix libpng``
libjpeg      ``brew install libjpeg``              ``brew --prefix libjpeg``
============ ===================================== ==========================

Getting Help
============

====================== ==============================
Command                Purpose
====================== ==============================
``./configure --help`` List all configure options along with their purpose.
                       It's best to save the output of this command into a file
                       and read it carefully.

                       - Here's a copy of the `configure help`_ generated on
                         my system.

``make help``          List all make commands along with their purpose.
====================== ==============================



Build Emacs
===========

Standard Build
--------------

From the root of Emacs repository,
execute the following commands::

  ./autogen.sh
  make extraclean
  ./configure
  make

Build without GUI support
-------------------------

::

  ./autogen.sh
  make extraclean
  ./configure --without-x
  make

The ``--without-x`` is only required when building Emacs in
terminal mode only.  If you want graphical support do not use
this option as shown in the previous section..


Build with native compilation
-----------------------------

Building with native compilation is the default since Emacs 30.
However, to be able to build with it you must install libgccjit
and configure must be able to find it.

Build with native compilation on macOS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

On macOS configure often does not find the location of
libgccjit installed with homebrew, therefore you must specify it in the
command line by setting ``CFLAGS`` and ``LDFLAGS`` to the directory where the
files are located.  I also add the ``--with-native-compilation`` option.
It's not needed in Emacs 30 but you must use it for Emacs 29 and 28.

You must also specify the ``--with-ns`` to add macOS (NextStep) support.

The build command is::

  ./autogen.sh
  make extraclean
  ./configure  --with-native-compilation --with-ns --with-modules CFLAGS="-I$(brew --prefix libgccjit)/include" LDFLAGS="-L$(brew --prefix libgccjit)/lib"
  make



Installing the build Emacs
--------------------------

To install the latest built emacs, execute::

  sudo make install

.. ---------------------------------------------------------------------------

Confirming that Emacs Native Compilation is active
==================================================

- Start Emacs
- With PEL execute **pel-emacs-config-features**, bound to ``<f11> ? e C``.

  - If native compilation is active the message will show ``NATIVE_COMP``
    in the list and will confirm it with the following text: ``With native compilation.``

- PEL sets the ``pel-emacs-with-native-comp-p`` constant to t if native compilation
  is supported, nil otherwise.
- Without PEL use the following function to print the features:

  .. code:: elisp


      (defun my-emacs-config-features ()
        "Print the names of all Emacs configured compilation features."
        (interactive)
        (message "%s. With%s native compilation."
                 system-configuration-features
                 (if (and
                       (fboundp 'native-comp-available-p)
                       (native-comp-available-p))
                     ""
                   "out")))

Once Emacs has been used at least once after the native compilation is active
you should see the ``~/.emacs.d/eln-cache`` directory with a sub-directory
that identifies the Emacs version.  Inside that directory you should see a
set of ``.eln`` files.  These are the natively compiled emacs lisp files.

For more information on the ``.eln`` files see:

- `Libraries of Lisp Code for Emacs`_
- `What is an eln-cache and how do I get rid of it? @ StackOverflow`_

.. ---------------------------------------------------------------------------
.. links:

.. _PEL -- Pragmatic Emacs Library: https://github.com/pierre-rouleau/pel#readme
.. _What's new in Emacs 30.1?: https://www.masteringemacs.org/article/whats-new-in-emacs-301
.. _Speed up Emacs with libjansson and native elisp compilation:  https://www.masteringemacs.org/article/speed-up-emacs-libjansson-native-elisp-compilation
.. _How to Get Started with Tree-Sitter:  https://www.masteringemacs.org/article/how-to-get-started-tree-sitter
.. _Libraries of Lisp Code for Emacs: https://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html
.. _What is an eln-cache and how do I get rid of it? @ StackOverflow: https://emacs.stackexchange.com/questions/78160/what-is-an-eln-cache-and-how-do-i-get-rid-of-it
.. _configure help: emacs-configure-help.txt
.. _Homebrew: https://brew.sh/

.. ---------------------------------------------------------------------------

..
       Local Variables:
       time-stamp-line-limit: 10
       time-stamp-start: "^:Modified:[ \t]+\\\\?"
       time-stamp-end:   "\\.$"
       LocalWords:  natively
       End:
