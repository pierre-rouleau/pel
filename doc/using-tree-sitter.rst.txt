====================================
Using tree-sitter with Emacs and PEL
====================================

:Home URL: https://github.com/pierre-rouleau/pel
:Project: `PEL -- Pragmatic Emacs Library`_
:Ref: `PEL How-to Tips`_
:Created:  Tuesday, March  4 2025.
:Author:  Pierre Rouleau <prouleau001@gmail.com>
:Modified: 2025-03-31 03:21:58 EDT, updated by Pierre Rouleau.
:Copyright: Â© 2025, Pierre Rouleau


.. contents::  **Table of Contents**
.. sectnum::

.. ---------------------------------------------------------------------------

Using tree-sitter with Emacs
=============================

:Ref: `How to Get Started with Tree-Sitter`_, by Mickey Petersen
:Ref: `What's new in Emacs 30.1?`_, by Mickey Petersen
:Ref: See also: `How to recompile all Emacs Lisp files after updating Emacs to a different version`_

#. Set the ``pel-use-tree-sitter`` user-option to t.

   - Save.
   - Exit Emacs.
   - Restart Emacs.  PEL will automatically install the latest tree-sitter
     files.

#. Set the ``~/.emacs.d/tree-sitter-langs-bin`` symbolic link to point to
   the tree-sitter lang bin directory.

  - Set it to something like:  ``~/.emacs.d/elpa/tree-sitter-langs-20250206.19/bin/``

#. Set the ``pel-treesit-load-path`` user-option.

   - Add the following directories to the list:

     - ``~/.emacs.d/tree-sitter-langs-bin``
     - ``~/.emacs.d/libtree-sitter``

   - Save.
   - Exit Emacs.

At this point you should be able to start Emacs and use tree-sitter facilities.

Controlling Automatic Invocation of the Tree-Sitter Modes
=========================================================

Emacs 30 NEWS file (located inside the etc directory of the Emacs Git repo)
nicely describes what needs to be done. The following
is a copy of the relevant information from that file.

Loading a Tree-Sitter mode (such as by using ``'M-x load-library'`` or with
``'M-x load-file'``) by default causes the corresponding non-Tree-Sitter
mode be remapped to the Tree-Sitter mode.  This remapping affects
visiting files for which ``'auto-mode-alist'`` specifies a non-Tree-Sitter
mode, and also affects mode-specification cookies on the first line of a
file and mode specifications in file- and directory-local variables.  To
revert to using a non-Tree-Sitter mode, reload the corresponding mode
file anew.  To prevent file loading from turning on Tree-Sitter mode
when ``'auto-mode-alist'`` or the file/directory-local variables specify a
non-Tree-Sitter mode, customize the user option **major-mode-remap-alist**
to specify that a non-Tree-Sitter mode is "remapped" to itself.  For
example:

.. code:: elisp

    (add-to-list 'major-mode-remap-alist '(c-mode))

specifies that C Mode should not be remapped to **c-ts-mode** even if and
when **c-ts-mode** is loaded.  Conversely,

.. code:: elisp

    (add-to-list 'major-mode-remap-alist '(c-mode . c-ts-mode))

tells Emacs to always invoke **c-ts-mode** whenever **c-mode** is
requested, either by ``'auto-mode-alist'`` or by file/directory-local
variables.

We recommend using ``'major-mode-remap-alist'`` to express your preferences
for using Tree-Sitter or non-Tree-Sitter modes for files for which both
variants of major modes are available, because that variable overrides
the remapping Emacs might decide to perform as result of loading Lisp
files and features.



.. ---------------------------------------------------------------------------
.. links:

.. _PEL -- Pragmatic Emacs Library: https://github.com/pierre-rouleau/pel#readme
.. _PEL How-to Tips: https://raw.githubusercontent.com/pierre-rouleau/pel/master/doc/pdf/-howto.pdf
.. _How to Get Started with Tree-Sitter:  https://www.masteringemacs.org/article/how-to-get-started-tree-sitter
.. _What's new in Emacs 30.1?: https://www.masteringemacs.org/article/whats-new-in-emacs-301
.. _How to recompile all Emacs Lisp files after updating Emacs to a different version: upgrading-emacs.rst.txt



.. ---------------------------------------------------------------------------

..
       Local Variables:
       time-stamp-line-limit: 10
       time-stamp-start: "^:Modified:[ \t]+\\\\?"
       time-stamp-end:   "\\.$"
       End:
