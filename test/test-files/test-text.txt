# This is a test file to test navigation and deletion on text-mode buffers.
#
# ----------------------------------------------------------------------------

This test file contain text with embedded spaces used to test various
navigation and deletion and navigation commands.

The text is organized in words, lines, paragraphs to test these aspects.
Some of the lines contain complete sentences, like this one.
Other lines contain multiple sentences.  This line holds two sentences.
Other lines hold a portion of a larger sentence that is split over a number of
lines like this one split over two lines.
And there is of course another one case with the long sentence is split over a
larger number of lines like this one with no intervening punctuation character
that could have an impact.
And there is of course another one case with the long sentence is split over a
larger number of lines like this one: with some intervening punctuation character
that could have an impact.
And there is of course another one case with the long sentence is split over a
larger number of lines like this other one: with some intervening punctuation
characters: twice as many.
And there is of course another one case with the long sentence is split over a
larger number of lines like this other one: with some intervening punctuation
characters: this one has another one; another case.
And then again, there is the case where a sentence is split in a line.  This
is a case here.

Then the same paragraph as above is repeated with all lines reformatted by
're-flowing' the entire paragraph.

The text is organized in words, lines, paragraphs to test these aspects.  Some
of the lines contain complete sentences, like this one.  Other lines contain
multiple sentences.  This line holds two sentences.  Other lines hold a
portion of a larger sentence that is split over a number of lines like this
one split over two lines.  And there is of course another one case with the
long sentence is split over a larger number of lines like this one with no
intervening punctuation character that could have an impact.  And there is of
course another one case with the long sentence is split over a larger number
of lines like this one: with some intervening punctuation character that could
have an impact.  And there is of course another one case with the long
sentence is split over a larger number of lines like this other one: with some
intervening punctuation characters: twice as many.  And there is of course
another one case with the long sentence is split over a larger number of lines
like this other one: with some intervening punctuation characters: this one
has another one; another case.  And then again, there is the case where a
sentence is split in a line.  This is a case here.

And the whole set indented.

    The text is organized in words, lines, paragraphs to test these aspects.
    Some of the lines contain complete sentences, like this one.
    Other lines contain multiple sentences.  This line holds two sentences.
    Other lines hold a portion of a larger sentence that is split over a number of
    lines like this one split over two lines.
    And there is of course another one case with the long sentence is split over a
    larger number of lines like this one with no intervening punctuation character
    that could have an impact.
    And there is of course another one case with the long sentence is split over a
    larger number of lines like this one: with some intervening punctuation character
    that could have an impact.
    And there is of course another one case with the long sentence is split over a
    larger number of lines like this other one: with some intervening punctuation
    characters: twice as many.
    And there is of course another one case with the long sentence is split over a
    larger number of lines like this other one: with some intervening punctuation
    characters: this one has another one; another case.
    And then again, there is the case where a sentence is split in a line.  This
    is a case here.

    Then the same paragraph as above is repeated with all lines reformatted by
    're-flowing' the entire paragraph.

    The text is organized in words, lines, paragraphs to test these aspects.  Some
    of the lines contain complete sentences, like this one.  Other lines contain
    multiple sentences.  This line holds two sentences.  Other lines hold a
    portion of a larger sentence that is split over a number of lines like this
    one split over two lines.  And there is of course another one case with the
    long sentence is split over a larger number of lines like this one with no
    intervening punctuation character that could have an impact.  And there is of
    course another one case with the long sentence is split over a larger number
    of lines like this one: with some intervening punctuation character that could
    have an impact.  And there is of course another one case with the long
    sentence is split over a larger number of lines like this other one: with some
    intervening punctuation characters: twice as many.  And there is of course
    another one case with the long sentence is split over a larger number of lines
    like this other one: with some intervening punctuation characters: this one
    has another one; another case.  And then again, there is the case where a
    sentence is split in a line.  This is a case here.


And     here      we have                      lots of spaces
       across             words to            test the space


deletion   and collapsing features    of the various commands.



And here some C code that has some symbols to see if they have an impact on
the text-mode:

/* -------------------------------------------------------------------------- */
typedef int (*function_pointer_t)(int,char*);
typedef struct s1
{
    int i1;
    char c1;
} s1_t;

typedef struct __attribute__ ((__packed__)) packed_s1
{
    iint i1;


    cchar c1;



}            packed_s1_t;


#define PRINTFOR(type) printf("sizeof(%25s) = %lu\n", #type, sizeof(type))

int main(int argc, char* argv[])
{



    printf("Data Types:\n");

    P RINTFOR(char);
    PRINTFOR(signed char);
    PRINTFOR(unsigned char);

    PRINTFOR(short);
    PRINTFOR(short int);
    PRINTFOR(signed short);
    PRINTFOR(signed short int);
    PRINTFOR(unsigned short);
    PRINTFOR(unsigned short int);

    PRINTFOR(int);
    PRINTFOR(signed);
    PRINTFOR(signed int);
    PRINTFOR(unsigned);
    PRINTFOR(unsigned int);

    PRINTFOR(long);
    PRINTFOR(long int);
    PRINTFOR(signed long);
    PRINTFOR(signed long int);
    PRINTFOR(unsigned long);
    PRINTFOR(unsigned long int);

    PRINTFOR(long long);
    PRINTFOR(long long int);
    PRINTFOR(signed long long);
    PRINTFOR(signed long long int);

    PRINTFOR(unsigned long long);
    PRINTFOR(unsigned long long int);

    PRINTFOR(float);
    PRINTFOR(double);
    PRINTFOR(long double);

    printf("\nPointer types:\n");
    PRINTFOR(void*);
    PRINTFOR(char*);
    PRINTFOR(char*);

    PRINTFOR(ptrdiff_t);
    PRINTFOR(size_t);
    PRINTFOR(ssize_t);
    PRINTFOR(time_t);

    PRINTFOR(intptr_t);
    PRINTFOR(uintptr_t);

/*     PRINTFOR(SIZE_T);
**     PRINTFOR(SSIZE_T);
**     PRINTFOR(INT_PTR);
**     PRINTFOR(DWORD_PTR);
*/

    printf("\nFunction types:\n");

    PRINTFOR(function_pointer_t);

    printf("\nStructures:\n\n");
    printf("typedef struct s1\n\
{\n\
    int  i1;\n\
    char c1;\n\
} s1_t;\n\n");

    PRINTFOR(s1_t);
    PRINTFOR(packed_s1_t);


    printf("\nSEE ALSO:\n");
    printf("Reference: %s\n\n", "https://en.wikipedia.org/wiki/C_data_types");

    return 0;

}

/* -------------------------------------------------------------------------- */
